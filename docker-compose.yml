version: '3.4'

x-logging:
  &default-logging
  options:
    max-size: '10m'
    max-file: '5'
  driver: json-file

services:
  web:
    image: ansible/awx_web:9.0.1
    container_name: awx_web
    depends_on:
      - rabbitmq
      - memcached
      - postgres
    hostname: awxweb
    user: root
    restart: unless-stopped
    volumes:
      - "/opt/composeproject/SECRET_KEY:/etc/tower/SECRET_KEY"
      - "/opt/composeproject/environment.sh:/etc/tower/conf.d/environment.sh"
      - "/opt/composeproject/credentials.py:/etc/tower/conf.d/credentials.py"
      - "/opt/composeproject/nginx.conf:/etc/nginx/nginx.conf:ro"
    environment:
      http_proxy:
      https_proxy:
      no_proxy:
    labels:
      - traefik.enable=${TRAEFIK_ENABLE:-true}
      - traefik.http.routers.awx.entrypoints=https
      - traefik.http.routers.awx.tls.certresolver=${TRAEFIK_CERT_RESOLVER:-route53}
      - traefik.http.routers.awx.tls=true
      - traefik.http.routers.awx.rule=${AWX_URL_CONFIG:-Host(`awx.infra.naturalis.nl`)}
    logging: *default-logging

  task:
    image: ansible/awx_task:9.0.1
    container_name: awx_task
    depends_on:
      - rabbitmq
      - memcached
      - web
      - postgres
    hostname: awx
    user: root
    restart: unless-stopped
    volumes:
      - "/opt/composeproject/SECRET_KEY:/etc/tower/SECRET_KEY"
      - "/opt/composeproject/environment.sh:/etc/tower/conf.d/environment.sh"
      - "/opt/composeproject/credentials.py:/etc/tower/conf.d/credentials.py"
    environment:
      http_proxy:
      https_proxy:
      no_proxy:
    logging: *default-logging

  rabbitmq:
    image: ansible/awx_rabbitmq:3.7.4
    container_name: awx_rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_ERLANG_COOKIE: cookiemonster
      http_proxy:
      https_proxy:
      no_proxy:
    logging: *default-logging

  memcached:
    image: "memcached:alpine"
    container_name: awx_memcached
    restart: unless-stopped
    environment:
      http_proxy:
      https_proxy:
      no_proxy:
    logging: *default-logging

  postgres:
    image: postgres:10
    container_name: awx_postgres
    restart: unless-stopped
    volumes:
      - ${BASE_PATH:-/data}/pgdata:/var/lib/postgresql/data/pgdata:Z
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
      http_proxy:
      https_proxy:
      no_proxy:
    logging: *default-logging

  traefik:
    image: traefik:2.0.5
    restart: unless-stopped
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_HOSTED_ZONE_ID=${AWS_HOSTED_ZONE_ID}
    ports:
      - 80:80
      - 443:443
      - 8081:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik:/etc/traefik
    logging: *default-logging


